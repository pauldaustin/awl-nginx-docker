rewrite_by_lua_no_postpone off;

server {
  listen   80;
  server_name  localhost;

  root   /usr/local/openresty/nginx/html;

  location / {
    index  index.html index.htm;
  }

  error_page   500 502 503 504  /50x.html;

  resolver 8.8.8.8;

  location = /50x.html {
    root   /usr/local/openresty/nginx/html;
  }

  location ~ ^/app/([\w\-_]+)/([\w\-_]+)(/?.*)$ {
    set $tenantKey $2;
    set $redirectPath '';

    rewrite_by_lua_block {
local moduleName = ngx.var[1]
local tenantKey = ngx.var.tenantKey
local filePath = ngx.var[3]

local appModule = require("appModule")
local tenant, err = appModule.getModuleTenant(moduleName, tenantKey)
if err then
  ngx.log(ngx.ERR, err)
  ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
elseif tenant == nil then
  ngx.exit(ngx.HTTP_NOT_FOUND)
else
  if not filePath:match('.%.%a+$') then
    filePath = "/index.html"
  end
  ngx.var.redirectPath = "/static/apps/" .. moduleName .. "/" .. tenant.moduleVersion  .. filePath
end
    }

    sub_filter '__NGINX_TENANT_KEY__' $tenantKey;
    sub_filter_once on;
    proxy_pass   https://awlprojectprototype.z35.web.core.windows.net$redirectPath;
    proxy_redirect   off;
    proxy_http_version 1.1;
    add_header Access-Control-Allow-Origin *;
  }

  location ~ ^/api/([\w\-_]+)/([\w\-_]+)(/?.*)$ {
    set $tenantKey $2;
    set $redirectUrl '';
    set $tenantId '';

    rewrite_by_lua_block {
local moduleName = ngx.var[1]
local tenantKey = ngx.var.tenantKey
local filePath = ngx.var[3]

local appModule = require("appModule")
local tenant, err = appModule.getModuleTenant(moduleName, tenantKey)
if err then
  ngx.log(ngx.ERR, err)
  ngx.exit(ngx.HTTP_INTERNAL_SERVER_ERROR)
elseif tenant == nil then
  ngx.exit(ngx.HTTP_NOT_FOUND)
else
  ngx.var.tenantId = tenant.RowKey
  ngx.var.redirectUrl = tenant.appServerUrl .. filePath
end
    }

    proxy_pass $redirectUrl;
    proxy_set_header PROJECT_TENANT_KEY $tenantKey;
    proxy_set_header PROJECT_TENANT_ID $tenantId;
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  }

  location ~ ^(/static(/?.*) {
    proxy_pass https://awlprojectprototype.z35.web.core.windows.net$1
    add_header Access-Control-Allow-Origin *;
  }
}
